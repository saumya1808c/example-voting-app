pipeline {
    agent none


    stages {
        stage('build') {
        agent {
          docker{
           image 'node:8.16-alpine'
                }
              }
          when{
                changeset "**/result/**"
               }
            steps {
                echo 'this is result build job'
                dir('result'){
                sh 'npm install'
                }
            }
       }
       stage('test') {
       agent {
         docker{
          image 'node:8.16-alpine'
               }
             }
       when {
                changeset "**/result/**"
            }
           steps {
               echo 'this is result test job'
               dir('result'){
               sh 'npm install'
               sh 'npm test'
               }
           }
           }
           stage('docker-package'){
             agent any
              when {
                      branch 'master'
                       changeset "**/result/**"
                   }
                   steps{
                        echo 'Packging result app with docker'
                     script{
                     docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
                     def resultImage = docker.build("saumya043/result:v${env.BUILD_ID}", "./result")
                     resultImage.push()
                     resultImage.push("${env.BRANCH_NAME}")
                  }
                }
             }
           }

    }
    post{
    always{
    echo 'pipeline for result is complete'
          }
    failure{
    slackSend (channel: "instavote-cd" , message:"Build failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
          }
    success{
    slackSend (channel: "instavote-cd" , message:"Build succeeded - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
    }
    }
}
